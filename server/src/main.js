const config = require('config')
const { Telegraf, session, Markup } = require('telegraf')
const { message } = require('telegraf/filters')
const { Scenes } = require('telegraf')
const { stage } = require('./scenes/index.js')
const checkSubscribe = require('./composer/check.js')

const bot = new Telegraf(config.get('TELEGRAM_TOKEN'), {
	handlerTimeout: Infinity,
})
bot.use(checkSubscribe)
bot.use(session())
bot.use(stage.middleware())

bot.action('greeting', ctx => {
	ctx.scene.enter('CONTACT_DATA_WIZARD_SCENE_ID')
})
const channels = ['-1001922987322']

bot.command('start', ctx => {
	ctx.replyWithHTML(
		'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –±–æ—Ç—É –ñ–æ–∑–µ—Ñ—É! –ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å –∏–ª–∏ —É–ª—É—á—à–∏—Ç—å –í–∞—à–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–µ—Å –∏ –∫–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏ (—Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –í–∞—à—É —Ü–µ–ª—å –≤ —Å–∏–ª–æ–≤—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è—Ö) –∏ –ñ–æ–∑–µ—Ñ –Ω–∞–ø–∏—à–µ—Ç –≤–∞–º —á–µ—Ç–∫–∏–π –ø–ª–∞–Ω –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –í–∞—à–∏—Ö —Ü–µ–ª–µ–π!<a href="https://t.me/sportikzz"> –ù–æ –ø–µ—Ä–µ–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç–≥ –≥—Ä—É–ø–ø—É</a>',
		Markup.inlineKeyboard([
			Markup.button.callback('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'check'),
		])
	)
})
//–ü–æ–¥–∫–ª—é—á—É –∫–æ–º–∞–Ω–¥—É –∫ –∫–Ω–æ–ø–∫–∞–º .on('text', greeting())

bot.hears(/money/i, ctx => ctx.reply('ü§ë'))

// bot.on(message('text'), async ctx => {
// 	try {
// 		//const response = await ChatGPT(ctx.message.text)
// 		//await ctx.reply(response)
// 	} catch (error) {
// 		console.log(error)
// 	}
// })

bot.on(message('sticker'), ctx => ctx.reply('üëç'))

bot.launch()
